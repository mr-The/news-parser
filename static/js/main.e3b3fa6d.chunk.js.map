{"version":3,"sources":["server/config.js","redux/actions/sources.js","server/parser.js","server/index.js","redux/actions/posts.js","components/Header.jsx","components/ModalNews.jsx","components/Post.jsx","components/LoaderBlock.jsx","App.jsx","redux/reducers/sources.js","redux/reducers/posts.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["config","postClasses","donland","createDate","title","image","text","donnews","batayskGorod","sites","linkClasses","Object","keys","data","source","proxyurl","parsePost","url","a","Promise","resolve","reject","axios","get","then","$","cheerio","domain","match","trim","attr","indexOf","catch","e","console","log","parseLink","maxQuery","links","length","each","i","el","link","replace","push","fetchPosts","posts","post","setTimeout","Posts","getPosts","setUploading","upload","type","payload","setPosts","toUpperFirstLetter","string","toUpperCase","slice","SiteHeader","handleChangeSource","className","Header","as","Button","Group","basic","map","site","icon","labelPosition","active","onClick","Icon","name","ModalNews","modalData","modalOpen","setModalOpen","description","onClose","open","Segment","clearing","Label","color","ribbon","content","Image","fluid","src","wrapped","Content","Description","Actions","href","target","rel","floated","primary","secondary","subText","str","substr","Modal","Post","useState","Item","size","verticalAlign","Extra","LoaderBlock","Placeholder","Line","Loader","style","textAlign","App","dispatch","useDispatch","useSelector","store","sources","items","uploading","useEffect","oldPosts","localStorage","getItem","newData","JSON","parse","fetchData","reverse","forEach","includes","stringify","unshift","setItem","Date","now","Container","divided","initialState","state","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3b3fa6d.chunk.js","sourcesContent":["const config = {\r\n  postClasses: {\r\n    donland: {\r\n      createDate: '.news-detail__date',\r\n      title: '.news-detail__column.news-detail__column--left h1',\r\n      image: '.js-photo img',\r\n      text: '.news-detail__detail p',\r\n    },\r\n    donnews: {\r\n      createDate: '.article__date',\r\n      title: '.article__title',\r\n      image: '.article__picture img',\r\n      text: '.article__content p',\r\n    },\r\n    batayskGorod: {\r\n      createDate: '.news-detail.simple .detail__date',\r\n      title: '.detail-name',\r\n      image: '.detail__picture',\r\n      text: '.js-mediator-article p',\r\n    },\r\n  },\r\n  sites: {\r\n    donland: 'https://www.donland.ru/news/',\r\n    donnews: 'https://www.donnews.ru/archive/1/',\r\n    batayskGorod: 'https://bataysk-gorod.ru/novosti-batayska/',\r\n  },\r\n  linkClasses: {\r\n    donland: '.list__items .list__item-body a.list__item-link',\r\n    donnews: '.catalog__shell a',\r\n    batayskGorod: '.detail__full .line .line__item',\r\n  },\r\n}\r\n\r\nexport default config\r\n","import config from '../../server/config'\r\n\r\nconst sites = Object.keys(config.sites)\r\n\r\nconst data = {\r\n  sites: sites,\r\n  source: sites[0],\r\n}\r\n\r\nexport const setSources = () => ({\r\n  type: 'SET_SOURCES',\r\n  payload: data,\r\n})\r\n\r\nexport const changeSource = (data) => ({\r\n  type: 'CHANGE_SOURCE',\r\n  payload: data,\r\n})\r\n","import * as cheerio from 'cheerio'\r\nimport axios from 'axios'\r\n\r\nconst proxyurl = 'https://fierce-bayou-16728.herokuapp.com/'\r\n\r\nexport const parsePost = async (url, postClasses) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(proxyurl + url)\r\n      .then(({ data }) => {\r\n        const $ = cheerio.load(data)\r\n\r\n        const domain = url.match(/\\/\\/(.*?)\\//)[1]\r\n        const createDate = $(postClasses.createDate).text()\r\n        const title = $(postClasses.title).text().trim()\r\n        let image = $(postClasses.image).attr('src')\r\n        image =\r\n          image && image.indexOf('https') >= 0\r\n            ? image\r\n            : `https://${domain}${image}`\r\n        const text = $(postClasses.text).text().trim()\r\n\r\n        const post = { createDate, title, image, text, url }\r\n        resolve(post)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  })\r\n}\r\n\r\nexport const parseLink = async (url, linkClasses, maxQuery) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(proxyurl + url)\r\n      .then(({ data }) => {\r\n        const $ = cheerio.load(data)\r\n        const domain = url.match(/\\/\\/(.*?)\\//)[1]\r\n        let links = []\r\n\r\n        maxQuery = !maxQuery ? (maxQuery = $(linkClasses).length) : maxQuery\r\n\r\n        $(linkClasses).each((i, el) => {\r\n          if (i < maxQuery) {\r\n            let link = $(el).attr('href')\r\n            link =\r\n              link && link.indexOf('./') >= 0\r\n                ? link.replace('./', '/news/')\r\n                : link\r\n            link =\r\n              link && link.indexOf('https') >= 0\r\n                ? link\r\n                : `https://${domain}${link}`\r\n\r\n            links.push(link)\r\n          }\r\n        })\r\n        resolve(links)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  })\r\n}\r\n\r\nexport const fetchPosts = async (links, postClasses) => {\r\n  const posts = []\r\n  for (let i = 0; i < links.length; i++) {\r\n    const post = await parsePost(links[i], postClasses)\r\n      .then((data) => data)\r\n      .catch((e) => console.log(e))\r\n    posts.push(post)\r\n    setTimeout(() => {}, 1000)\r\n  }\r\n  return posts\r\n}\r\n","import config from './config.js'\r\nimport { fetchPosts, parseLink } from './parser.js'\r\n\r\nasync function getPosts(source, maxQuery) {\r\n  const Posts = async (source, maxQuery) => {\r\n    const links = await parseLink(\r\n      config.sites[source],\r\n      config.linkClasses[source],\r\n      maxQuery\r\n    )\r\n      .then((data) => data)\r\n      .catch((e) => console.log(e))\r\n\r\n    const posts = await fetchPosts(links, config.postClasses[source])\r\n\r\n    return posts\r\n  }\r\n\r\n  let posts = await Posts(source, maxQuery)\r\n  return posts\r\n}\r\n\r\nexport default getPosts\r\n","import getPosts from '../../server'\r\n\r\nexport const fetchPosts = (site) => (dispatch) => {\r\n  const oldPosts = localStorage.getItem(site)\r\n\r\n  let newData = JSON.parse(oldPosts) || {}\r\n\r\n  dispatch(setUploading(true))\r\n  newData && dispatch(setPosts({ site, newData }))\r\n\r\n  const fetchData = async () => {\r\n    dispatch(setUploading(true))\r\n    let data = await getPosts(site)\r\n\r\n    if (Object.keys(newData).length) {\r\n      data = data.reverse()\r\n      data.forEach((post) => {\r\n        if (!oldPosts.includes(JSON.stringify(post))) {\r\n          newData.unshift(post)\r\n        }\r\n      })\r\n    } else {\r\n      newData = data\r\n    }\r\n\r\n    newData = newData.length > 15 ? newData.slice(0, 15) : newData\r\n\r\n    localStorage.setItem(site, JSON.stringify(newData))\r\n    localStorage.setItem(`${site}-uploadTime`, JSON.stringify(Date.now()))\r\n\r\n    dispatch(setPosts({ site, newData }))\r\n  }\r\n\r\n  if (Date.now() - localStorage.getItem(`${site}-uploadTime`) > 21600000) {\r\n    fetchData()\r\n  }\r\n}\r\n\r\nexport const setUploading = (upload) => ({\r\n  type: 'SET_UPLOADING',\r\n  payload: upload,\r\n})\r\n\r\nexport const setPosts = (data) => ({\r\n  type: 'SET_POSTS',\r\n  payload: data,\r\n})\r\n","import { Button, Header, Icon } from 'semantic-ui-react'\r\n\r\nconst toUpperFirstLetter = (string = '') => {\r\n  return string[0].toUpperCase() + string.slice(1)\r\n}\r\n\r\nconst SiteHeader = ({ source = '', sites, handleChangeSource, className }) => (\r\n  <Header as=\"h2\" className={className}>\r\n    Сайт: {source && toUpperFirstLetter(source)}\r\n    <div className=\"button-group\">\r\n      <Button.Group basic>\r\n        {sites &&\r\n          sites &&\r\n          sites.map((site) => (\r\n            <Button\r\n              key={site}\r\n              icon\r\n              labelPosition=\"left\"\r\n              active={source === site}\r\n              onClick={() => {\r\n                handleChangeSource(site)\r\n              }}\r\n            >\r\n              <Icon name=\"world\" />\r\n              {toUpperFirstLetter(site)}\r\n            </Button>\r\n          ))}\r\n      </Button.Group>\r\n    </div>\r\n  </Header>\r\n)\r\n\r\nexport default SiteHeader\r\n","import React from 'react'\r\nimport { Button, Header, Image, Label, Modal, Segment } from 'semantic-ui-react'\r\n\r\nfunction ModalNews({ modalData, modalOpen, setModalOpen }) {\r\n  const { title, description, image, createDate, url } = modalData\r\n\r\n  return (\r\n    <Modal onClose={() => setModalOpen(false)} open={modalOpen}>\r\n      <Segment clearing>\r\n        <Header as=\"h2\">{title}</Header>\r\n        <Label as=\"span\" color=\"teal\" ribbon=\"right\" content={createDate} />\r\n      </Segment>\r\n      <Image fluid src={image} wrapped />\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <p>{description}</p>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n          <Button\r\n            floated=\"left\"\r\n            content=\"Оригинал\"\r\n            labelPosition=\"left\"\r\n            icon=\"arrow circle left\"\r\n            primary\r\n          />\r\n        </a>\r\n        <Button secondary onClick={() => setModalOpen(false)}>\r\n          Закрыть\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalNews\r\n","import React, { useState } from 'react'\r\nimport { Item, Label } from 'semantic-ui-react'\r\nimport ModalNews from './ModalNews'\r\n\r\nconst subText = (str = '') => {\r\n  return str.substr(0, 500) + '...'\r\n}\r\n\r\nconst Modal = (modalData, modalOpen, setModalOpen) => (\r\n  <ModalNews\r\n    modalData={modalData}\r\n    modalOpen={modalOpen}\r\n    setModalOpen={setModalOpen}\r\n  />\r\n)\r\n\r\nconst Post = ({ title, description, image, createDate, url }) => {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  let modalData = {}\r\n\r\n  modalData = { title, description, image, createDate, url }\r\n\r\n  const clickPost = () => {\r\n    setModalOpen(!modalOpen)\r\n  }\r\n  return (\r\n    <>\r\n      {modalOpen ? Modal(modalData, modalOpen, setModalOpen) : ''}\r\n      <Item onClick={clickPost}>\r\n        <Item.Image size=\"medium\" src={image} />\r\n\r\n        <Item.Content verticalAlign=\"top\">\r\n          <Item.Header as=\"a\">{title}</Item.Header>\r\n          <Item.Description>{subText(description)}</Item.Description>\r\n          <Item.Extra>\r\n            <Label icon=\"eye\" color=\"teal\" content={createDate} />\r\n          </Item.Extra>\r\n        </Item.Content>\r\n      </Item>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import { Loader, Placeholder } from 'semantic-ui-react'\r\n\r\nconst LoaderBlock = ({ text }) => (\r\n  <div className=\"loader-block\">\r\n    <Placeholder fluid>\r\n      <Placeholder.Header>\r\n        <Placeholder.Line length=\"full\" />\r\n        <Placeholder.Line length=\"full\" />\r\n        <Placeholder.Line length=\"full\" />\r\n        <Loader active size=\"large\" />\r\n      </Placeholder.Header>\r\n    </Placeholder>\r\n    <p style={{ textAlign: 'center', color: 'teal' }}>{text}</p>\r\n  </div>\r\n)\r\n\r\nexport default LoaderBlock\r\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Item, Container } from 'semantic-ui-react'\n\nimport { changeSource, setSources } from './redux/actions/sources'\nimport { fetchPosts } from './redux/actions/posts'\n\nimport SiteHeader from './components/Header'\nimport Post from './components/Post'\nimport LoaderBlock from './components/LoaderBlock'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const { sites = [], source } = useSelector((store) => store.sources)\n  const { posts = [] } = useSelector((store) => store)\n  const items = posts[source] || []\n\n  const uploading = posts.uploading\n\n  useEffect(() => {\n    dispatch(setSources())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(fetchPosts(source))\n  }, [dispatch, source])\n\n  const handleChangeSource = (site) => {\n    dispatch(changeSource(site))\n  }\n\n  return (\n    <Container>\n      <div className=\"App\">\n        {sites.length && (\n          <SiteHeader\n            className={uploading ? 'p-static' : ''}\n            source={source}\n            sites={sites}\n            handleChangeSource={handleChangeSource}\n          />\n        )}\n        <Item.Group divided>\n          {!items.length ? (\n            <LoaderBlock text=\"Загрузка ...\" />\n          ) : (\n            <>\n              {uploading ? <LoaderBlock text=\"Обновление ...\" /> : ''}\n              {items.map((post) => (\n                <Post\n                  key={post.title}\n                  title={post.title}\n                  description={post.text}\n                  image={post.image}\n                  createDate={post.createDate}\n                  url={post.url}\n                />\n              ))}\n            </>\n          )}\n        </Item.Group>\n      </div>\n    </Container>\n  )\n}\n\nexport default App\n","const initialState = {\r\n  sites: [],\r\n  source: '',\r\n}\r\n\r\nconst sources = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_SOURCES':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    case 'CHANGE_SOURCE':\r\n      return {\r\n        ...state,\r\n        source: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sources\r\n","const initialState = {}\r\n\r\nconst posts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_POSTS':\r\n      const site = action.payload.site\r\n      return {\r\n        ...state,\r\n        [site]: action.payload.newData,\r\n        uploading: action.payload.uploading || false,\r\n      }\r\n    case 'SET_UPLOADING':\r\n      return {\r\n        ...state,\r\n        uploading: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default posts\r\n","import { combineReducers } from 'redux'\r\n\r\nimport sources from './sources'\r\nimport posts from './posts'\r\n\r\nconst rootReducer = combineReducers({ sources, posts })\r\n\r\nexport default rootReducer\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport store from './redux/store'\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.scss'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}